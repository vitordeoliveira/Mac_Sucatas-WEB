{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/vitor/Desktop/Work/MAC Sucatas GraphQl/web/src/Authentication/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Authentication from \"../Authentication\";\nexport const PrivateRoute = (_ref) => {\n  _s();\n\n  let {\n    component: Component\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  const {\n    auth\n  } = useContext(Authentication);\n\n  if (auth.loading) {\n    return null;\n  }\n\n  return __jsx(Route, _extends({}, rest, {\n    render: props => auth.isAuthenticated ? __jsx(Component, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    })) : __jsx(Redirect, {\n      to: {\n        pathname: \"/\",\n        state: {\n          from: props.location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }));\n};\n\n_s(PrivateRoute, \"tr1QHgBDI2fKKLySXzFBgmQfvcw=\");\n\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/vitor/Desktop/Work/MAC Sucatas GraphQl/web/src/Authentication/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","Authentication","PrivateRoute","component","Component","rest","auth","loading","props","isAuthenticated","pathname","state","from","location"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,OAAO,MAAMC,YAAY,GAAG,UAAuC;AAAA;;AAAA,MAAtC;AAAEC,IAAAA,SAAS,EAAEC;AAAb,GAAsC;AAAA,MAAXC,IAAW;;AACjE,QAAM;AAAEC,IAAAA;AAAF,MAAWR,UAAU,CAACG,cAAD,CAA3B;;AAEA,MAAIK,IAAI,CAACC,OAAT,EAAkB;AAChB,WAAO,IAAP;AACD;;AAED,SACE,MAAC,KAAD,eACMF,IADN;AAEE,IAAA,MAAM,EAAGG,KAAD,IACNF,IAAI,CAACG,eAAL,GACE,MAAC,SAAD,eAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,GAGE,MAAC,QAAD;AACE,MAAA,EAAE,EAAE;AAAEE,QAAAA,QAAQ,EAAE,GAAZ;AAAiBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd;AAAxB,OADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAcD,CArBM;;GAAMX,Y;;KAAAA,Y","sourcesContent":["import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Authentication from \"../Authentication\";\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n  const { auth } = useContext(Authentication);\n\n  if (auth.loading) {\n    return null;\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth.isAuthenticated ? (\n          <Component {...props}></Component>\n        ) : (\n          <Redirect\n            to={{ pathname: \"/\", state: { from: props.location } }}\n          ></Redirect>\n        )\n      }\n    ></Route>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}