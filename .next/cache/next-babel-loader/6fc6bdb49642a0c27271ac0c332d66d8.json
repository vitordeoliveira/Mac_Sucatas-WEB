{"ast":null,"code":"var _jsxFileName = \"/home/vitor/Desktop/Work/MAC Sucatas GraphQl/web/src/components/organisms/Dashboard/Clients.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport ClientsList from \"../../molecules/Clients/List\";\nimport Adder from \"../../molecules/Clients/Adder\";\nconst GETCLIENTS = gql`\n  {\n    getClients {\n      id\n      type\n      name\n      email\n      phone\n    }\n  }\n`;\n\nfunction DashboardClients({\n  type\n}) {\n  _s();\n\n  const {\n    loading,\n    data,\n    refetch\n  } = useQuery(GETCLIENTS);\n\n  if (loading) {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    }, \"loading\");\n  }\n\n  const filter = data.getClients.filter(item => {\n    return item.type === (type === \"Fornecedor\" ? \"1\" : \"2\");\n  });\n  return __jsx(React.Fragment, null, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(ClientsList, {\n    title: type,\n    clients: filter,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })), __jsx(Options, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(Adder, {\n    type: type,\n    refetch: refetch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(DashboardClients, \"ZMuFGt0XD1CAKU/yiugn9G82kTM=\", false, function () {\n  return [useQuery];\n});\n\n_c = DashboardClients;\nconst Wrapper = styled.div`\n  padding: 10px 0;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\nconst List = styled(Wrapper)`\n  flex: 2;\n  border-right: 1px dashed rgb(80, 80, 80);\n`;\n_c2 = List;\nconst Options = styled(Wrapper)`\n  flex: 1.3;\n`;\n_c3 = Options;\nexport default DashboardClients;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DashboardClients\");\n$RefreshReg$(_c2, \"List\");\n$RefreshReg$(_c3, \"Options\");","map":{"version":3,"sources":["/home/vitor/Desktop/Work/MAC Sucatas GraphQl/web/src/components/organisms/Dashboard/Clients.js"],"names":["React","styled","useQuery","gql","ClientsList","Adder","GETCLIENTS","DashboardClients","type","loading","data","refetch","filter","getClients","item","Wrapper","div","List","Options"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AAEA,MAAMC,UAAU,GAAGH,GAAI;;;;;;;;;;CAAvB;;AAYA,SAASI,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAoC;AAAA;;AAClC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MAA6BT,QAAQ,CAACI,UAAD,CAA3C;;AAEA,MAAIG,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;AAED,QAAMG,MAAM,GAAGF,IAAI,CAACG,UAAL,CAAgBD,MAAhB,CAAwBE,IAAD,IAAU;AAC9C,WAAOA,IAAI,CAACN,IAAL,MAAeA,IAAI,KAAK,YAAT,GAAwB,GAAxB,GAA8B,GAA7C,CAAP;AACD,GAFc,CAAf;AAIA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,KAAK,EAAEA,IADT;AAEE,IAAA,OAAO,EAAEI,MAFX;AAGE,IAAA,OAAO,EAAEH,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAED,IAAb;AAAmB,IAAA,OAAO,EAAEG,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CADF;AAcD;;GAzBQJ,gB;UAC4BL,Q;;;KAD5BK,gB;AA2BT,MAAMQ,OAAO,GAAGd,MAAM,CAACe,GAAI;;;;;CAA3B;AAOA,MAAMC,IAAI,GAAGhB,MAAM,CAACc,OAAD,CAAU;;;CAA7B;MAAME,I;AAKN,MAAMC,OAAO,GAAGjB,MAAM,CAACc,OAAD,CAAU;;CAAhC;MAAMG,O;AAIN,eAAeX,gBAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nimport ClientsList from \"../../molecules/Clients/List\";\nimport Adder from \"../../molecules/Clients/Adder\";\n\nconst GETCLIENTS = gql`\n  {\n    getClients {\n      id\n      type\n      name\n      email\n      phone\n    }\n  }\n`;\n\nfunction DashboardClients({ type }) {\n  const { loading, data, refetch } = useQuery(GETCLIENTS);\n\n  if (loading) {\n    return <h1>loading</h1>;\n  }\n\n  const filter = data.getClients.filter((item) => {\n    return item.type === (type === \"Fornecedor\" ? \"1\" : \"2\");\n  });\n\n  return (\n    <>\n      <List>\n        <ClientsList\n          title={type}\n          clients={filter}\n          loading={loading}\n        ></ClientsList>\n      </List>\n      <Options>\n        <Adder type={type} refetch={refetch}></Adder>\n      </Options>\n    </>\n  );\n}\n\nconst Wrapper = styled.div`\n  padding: 10px 0;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst List = styled(Wrapper)`\n  flex: 2;\n  border-right: 1px dashed rgb(80, 80, 80);\n`;\n\nconst Options = styled(Wrapper)`\n  flex: 1.3;\n`;\n\nexport default DashboardClients;\n"]},"metadata":{},"sourceType":"module"}