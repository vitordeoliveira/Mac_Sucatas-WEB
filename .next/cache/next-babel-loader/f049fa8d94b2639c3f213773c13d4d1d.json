{"ast":null,"code":"var _jsxFileName = \"/home/vitor/Desktop/Work/MAC Sucatas GraphQl/web/pages/components/organisms/LoginForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\"; // import useLogin from \"../../Authentication/useLogin\";\n\nimport Button from \"../atoms/Button\";\nimport LoginInput from \"../atoms/LoginInput\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useHistory } from \"react-router-dom\";\nimport { gql } from \"apollo-boost\";\nimport Auth from \"../../Authentication\";\nconst LOGIN = gql`\n  mutation Login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      token\n      user {\n        id\n        name\n      }\n    }\n  }\n`;\n\nfunction LoginForm() {\n  _s();\n\n  const {\n    0: username,\n    1: setUsername\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: error,\n    1: setError\n  } = useState(\"\");\n  const [login] = useMutation(LOGIN);\n  const history = useHistory();\n  const {\n    setAuth\n  } = useContext(Auth);\n\n  const onclick = async () => {\n    try {\n      const {\n        data\n      } = await login({\n        variables: {\n          username,\n          password\n        }\n      });\n\n      if (data.login.token) {\n        setAuth({\n          token: data.login.token,\n          isAuthenticated: true,\n          loading: false,\n          user: data.login.user\n        });\n        localStorage.setItem(\"token\", data.login.token);\n        history.push(\"/dashboard\");\n      } else {\n        setError(\"Usuario ou senha incorretos\");\n      }\n    } catch (error) {\n      console.log(error);\n      setError(\"Erro no servidor\");\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, error ? __jsx(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 18\n    }\n  }, error) : null, __jsx(LoginInput, {\n    placeholder: \"Username\",\n    value: username,\n    onChange: e => {\n      setUsername(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), __jsx(LoginInput, {\n    password: true,\n    placeholder: \"Password\",\n    type: \"password\",\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onclick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Login\")));\n}\n\n_s(LoginForm, \"2FraVNKhpPhSKrpnIfg/wuBrBb8=\", false, function () {\n  return [useMutation, useHistory];\n});\n\n_c = LoginForm;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 65%;\n  height: 95%;\n  min-width: 300px;\n  justify-content: space-evenly;\n  align-items: center;\n  box-shadow: 0 0 2px;\n  border-radius: 15px;\n  background: #f9f9f9;\n  position: relative;\n`;\n_c2 = Form;\nconst Error = styled.p`\n  color: red;\n  height: auto;\n  text-align: center;\n  position: absolute;\n  top: 5px;\n`;\n_c3 = Error;\nexport default LoginForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"Error\");","map":{"version":3,"sources":["/home/vitor/Desktop/Work/MAC Sucatas GraphQl/web/pages/components/organisms/LoginForm.js"],"names":["React","useState","useContext","styled","Button","LoginInput","useMutation","useHistory","gql","Auth","LOGIN","LoginForm","username","setUsername","password","setPassword","error","setError","login","history","setAuth","onclick","data","variables","token","isAuthenticated","loading","user","localStorage","setItem","push","console","log","e","target","value","Form","form","Error","p"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n// import useLogin from \"../../Authentication/useLogin\";\nimport Button from \"../atoms/Button\";\nimport LoginInput from \"../atoms/LoginInput\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useHistory } from \"react-router-dom\";\nimport { gql } from \"apollo-boost\";\nimport Auth from \"../../Authentication\";\n\nconst LOGIN = gql`\n  mutation Login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      token\n      user {\n        id\n        name\n      }\n    }\n  }\n`;\n\nfunction LoginForm() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [login] = useMutation(LOGIN);\n  const history = useHistory();\n  const { setAuth } = useContext(Auth);\n\n  const onclick = async () => {\n    try {\n      const { data } = await login({\n        variables: { username, password },\n      });\n      if (data.login.token) {\n        setAuth({\n          token: data.login.token,\n          isAuthenticated: true,\n          loading: false,\n          user: data.login.user,\n        });\n        localStorage.setItem(\"token\", data.login.token);\n        history.push(\"/dashboard\");\n      } else {\n        setError(\"Usuario ou senha incorretos\");\n      }\n    } catch (error) {\n      console.log(error);\n      setError(\"Erro no servidor\");\n    }\n  };\n\n  return (\n    <>\n      <Form>\n        {error ? <Error>{error}</Error> : null}\n        <LoginInput\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value);\n          }}\n        ></LoginInput>\n        <LoginInput\n          password\n          placeholder=\"Password\"\n          type=\"password\"\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        ></LoginInput>\n        <Button onClick={onclick}>Login</Button>\n      </Form>\n    </>\n  );\n}\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 65%;\n  height: 95%;\n  min-width: 300px;\n  justify-content: space-evenly;\n  align-items: center;\n  box-shadow: 0 0 2px;\n  border-radius: 15px;\n  background: #f9f9f9;\n  position: relative;\n`;\n\nconst Error = styled.p`\n  color: red;\n  height: auto;\n  text-align: center;\n  position: absolute;\n  top: 5px;\n`;\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}