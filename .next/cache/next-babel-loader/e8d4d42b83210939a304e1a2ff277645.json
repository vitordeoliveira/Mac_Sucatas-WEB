{"ast":null,"code":"var _jsxFileName = \"/home/vitor/Desktop/Work/MAC Sucatas GraphQl/web/src/components/molecules/Products/Update.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../../atoms/Button\";\n\nfunction Update({\n  state,\n  dispatch,\n  update,\n  refresh\n}) {\n  const {\n    0: formdata,\n    1: setFormdata\n  } = useState(state);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    id,\n    name,\n    stock,\n    balanceStock\n  } = formdata;\n  useEffect(() => {\n    setFormdata(state);\n  }, [state]);\n\n  const onchange = e => {\n    setFormdata(_objectSpread(_objectSpread({}, formdata), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onclick = async () => {\n    try {\n      setLoading(true);\n      await update({\n        variables: {\n          id,\n          name,\n          stock: Number(stock),\n          balanceStock: Number(balanceStock)\n        }\n      });\n      refresh({\n        reload: true\n      });\n      setLoading(false);\n      dispatch({\n        type: \"offUpdate\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"EDITAR\"), __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    value: name,\n    name: \"name\",\n    onChange: e => onchange(e),\n    placeholder: \"Nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), __jsx(Input, {\n    value: stock,\n    name: \"stock\",\n    onChange: e => onchange(e),\n    placeholder: \"Estoque\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), __jsx(Input, {\n    value: balanceStock,\n    name: \"balanceStock\",\n    onChange: e => onchange(e),\n    placeholder: `Balan\\u00e7o`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onclick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, !loading ? \"Enviar\" : \"loading\")));\n}\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 60%;\n  max-height: 355px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  margin: 70px 0;\n`;\nconst Title = styled.h1`\n  color: rgb(50, 50, 50);\n`;\nconst Input = styled.input`\n  border-radius: 50px;\n  border: 0;\n  height: 35px;\n  padding: 0 50px;\n  border: 2px solid #2c6126;\n  text-align: center;\n  font-size: 15px;\n\n  :focus {\n    outline-width: 0;\n  }\n\n  ::placeholder {\n    letter-spacing: 2px;\n  }\n`;\nexport default Update;","map":{"version":3,"sources":["/home/vitor/Desktop/Work/MAC Sucatas GraphQl/web/src/components/molecules/Products/Update.js"],"names":["React","useEffect","useState","styled","Button","Update","state","dispatch","update","refresh","formdata","setFormdata","loading","setLoading","id","name","stock","balanceStock","onchange","e","target","value","onclick","variables","Number","reload","type","error","console","log","Wrapper","div","Title","h1","Input","input"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,MAAnB;AAA2BC,EAAAA;AAA3B,CAAhB,EAAsD;AACpD,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAACI,KAAD,CAAxC;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM;AAAEY,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAAoCP,QAA1C;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW,CAACL,KAAD,CAAX;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,QAAMY,QAAQ,GAAIC,CAAD,IAAO;AACtBR,IAAAA,WAAW,iCAAMD,QAAN;AAAgB,OAACS,CAAC,CAACC,MAAF,CAASL,IAAV,GAAiBI,CAAC,CAACC,MAAF,CAASC;AAA1C,OAAX;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAG,YAAY;AAC1B,QAAI;AACFT,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAML,MAAM,CAAC;AACXe,QAAAA,SAAS,EAAE;AACTT,UAAAA,EADS;AAETC,UAAAA,IAFS;AAGTC,UAAAA,KAAK,EAAEQ,MAAM,CAACR,KAAD,CAHJ;AAITC,UAAAA,YAAY,EAAEO,MAAM,CAACP,YAAD;AAJX;AADA,OAAD,CAAZ;AASAR,MAAAA,OAAO,CAAC;AAAEgB,QAAAA,MAAM,EAAE;AAAV,OAAD,CAAP;AACAZ,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEAN,MAAAA,QAAQ,CAAC;AAAEmB,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAfD,CAeE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAnBD;;AAoBA,SACE,4BACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,KAAK,EAAEZ,IADT;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAGI,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAH3B;AAIE,IAAA,WAAW,EAAC,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,MAAC,KAAD;AACE,IAAA,KAAK,EAAEH,KADT;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,QAAQ,EAAGG,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAH3B;AAIE,IAAA,WAAW,EAAC,SAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaE,MAAC,KAAD;AACE,IAAA,KAAK,EAAEF,YADT;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,QAAQ,EAAGE,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAH3B;AAIE,IAAA,WAAW,EAAG,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAmBE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B,CAACV,OAAD,GAAW,QAAX,GAAsB,SAAjD,CAnBF,CAFF,CADF;AA0BD;;AAED,MAAMkB,OAAO,GAAG3B,MAAM,CAAC4B,GAAI;;;;;;;;;CAA3B;AAWA,MAAMC,KAAK,GAAG7B,MAAM,CAAC8B,EAAG;;CAAxB;AAIA,MAAMC,KAAK,GAAG/B,MAAM,CAACgC,KAAM;;;;;;;;;;;;;;;;CAA3B;AAkBA,eAAe9B,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Button from \"../../atoms/Button\";\n\nfunction Update({ state, dispatch, update, refresh }) {\n  const [formdata, setFormdata] = useState(state);\n  const [loading, setLoading] = useState(false);\n\n  const { id, name, stock, balanceStock } = formdata;\n\n  useEffect(() => {\n    setFormdata(state);\n  }, [state]);\n\n  const onchange = (e) => {\n    setFormdata({ ...formdata, [e.target.name]: e.target.value });\n  };\n\n  const onclick = async () => {\n    try {\n      setLoading(true);\n      await update({\n        variables: {\n          id,\n          name,\n          stock: Number(stock),\n          balanceStock: Number(balanceStock),\n        },\n      });\n\n      refresh({ reload: true });\n      setLoading(false);\n\n      dispatch({ type: \"offUpdate\" });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <>\n      <Title>EDITAR</Title>\n      <Wrapper>\n        <Input\n          value={name}\n          name=\"name\"\n          onChange={(e) => onchange(e)}\n          placeholder=\"Nome\"\n        ></Input>\n        <Input\n          value={stock}\n          name=\"stock\"\n          onChange={(e) => onchange(e)}\n          placeholder=\"Estoque\"\n        ></Input>\n        <Input\n          value={balanceStock}\n          name=\"balanceStock\"\n          onChange={(e) => onchange(e)}\n          placeholder={`Balan\\u00e7o`}\n        ></Input>\n        <Button onClick={onclick}>{!loading ? \"Enviar\" : \"loading\"}</Button>\n      </Wrapper>\n    </>\n  );\n}\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 60%;\n  max-height: 355px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  margin: 70px 0;\n`;\n\nconst Title = styled.h1`\n  color: rgb(50, 50, 50);\n`;\n\nconst Input = styled.input`\n  border-radius: 50px;\n  border: 0;\n  height: 35px;\n  padding: 0 50px;\n  border: 2px solid #2c6126;\n  text-align: center;\n  font-size: 15px;\n\n  :focus {\n    outline-width: 0;\n  }\n\n  ::placeholder {\n    letter-spacing: 2px;\n  }\n`;\n\nexport default Update;\n"]},"metadata":{},"sourceType":"module"}